# Generated by Django 2.1.2 on 2018-10-21 17:52

import core.db.fields.displayable_url_field
import core.db.fields.price_field
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', core.db.fields.displayable_url_field.DisplayableURLField(editable=False, max_length=2048, unique=True, validators=[django.core.validators.RegexValidator(message='slug valid error', regex='^(($)|(([-_\\da-z]+/)+$))')], verbose_name='URL')),
                ('url', core.db.fields.displayable_url_field.DisplayableURLField(editable=False, max_length=2048, unique=True, validators=[django.core.validators.RegexValidator(message='slug valid error', regex='^(($)|(([-_\\da-z]+/)+$))')], verbose_name='URL')),
                ('scoring', models.IntegerField(default=0, verbose_name='scoring')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('_title', models.CharField(blank=True, max_length=512, verbose_name='meta-tag title')),
                ('_meta_title', models.CharField(blank=True, max_length=512, verbose_name='meta-tag ')),
                ('_meta_keywords', models.CharField(blank=True, max_length=512, verbose_name='meta-tag keywords')),
                ('_meta_description', models.CharField(blank=True, max_length=512, verbose_name='meta-tag description')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.CategoryPage', verbose_name='parent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfferPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', core.db.fields.displayable_url_field.DisplayableURLField(editable=False, max_length=2048, unique=True, validators=[django.core.validators.RegexValidator(message='slug valid error', regex='^(($)|(([-_\\da-z]+/)+$))')], verbose_name='URL')),
                ('url', core.db.fields.displayable_url_field.DisplayableURLField(editable=False, max_length=2048, unique=True, validators=[django.core.validators.RegexValidator(message='slug valid error', regex='^(($)|(([-_\\da-z]+/)+$))')], verbose_name='URL')),
                ('scoring', models.IntegerField(default=0, verbose_name='scoring')),
                ('is_published', models.BooleanField(default=False, verbose_name='published')),
                ('_title', models.CharField(blank=True, max_length=512, verbose_name='meta-tag title')),
                ('_meta_title', models.CharField(blank=True, max_length=512, verbose_name='meta-tag ')),
                ('_meta_keywords', models.CharField(blank=True, max_length=512, verbose_name='meta-tag keywords')),
                ('_meta_description', models.CharField(blank=True, max_length=512, verbose_name='meta-tag description')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='creation date')),
                ('modified_at', models.DateTimeField(blank=True, verbose_name='last modification date')),
                ('price', core.db.fields.price_field.PriceField(decimal_places=2, max_digits=8)),
                ('old_price', core.db.fields.price_field.PriceField(decimal_places=2, max_digits=8)),
                ('code', models.CharField(db_index=True, max_length=128, verbose_name='vendor code')),
                ('is_in_stock', models.BooleanField(default=True, verbose_name='is in stock')),
                ('is_new', models.BooleanField(default=False, verbose_name='is new')),
                ('is_bestseller', models.BooleanField(default=False, verbose_name='is bestseller')),
                ('display_sale', models.BooleanField(default=True, verbose_name='display sale')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='amount in storage')),
                ('attributes', django.contrib.postgres.fields.jsonb.JSONField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfferPageCategoryRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.CategoryPage')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.OfferPage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='offerpage',
            name='categories',
            field=models.ManyToManyField(related_name='products', through='shop.OfferPageCategoryRelation', to='shop.CategoryPage'),
        ),
        migrations.AddField(
            model_name='offerpage',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Product'),
        ),
    ]
